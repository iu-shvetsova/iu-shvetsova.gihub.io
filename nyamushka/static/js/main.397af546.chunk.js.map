{"version":3,"sources":["assets/images/picture@1x.png","assets/images/picture@2x.png","mocks/items.js","components/CardItem/CardItem.js","helpers/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","items","id","type","title","filling","servingsCount","miceCount","additions","weight","description","status","b","withNaming","n","e","m","v","cn","CardItem","state","mouseEnter","mouseLeaveAfterSelect","props","handleMouseLeave","setState","handleMouseEnter","this","onSelect","className","onClick","onMouseEnter","onMouseLeave","getServingsCountText","getMiceCountText","map","item","src","cat1x","width","height","srcSet","cat2x","alt","toLocaleString","href","getDescription","React","Component","App","toggleItemSelect","index","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.397af546.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/picture@1x.717f53c7.png\";","module.exports = __webpack_public_path__ + \"static/media/picture@2x.7461fed8.png\";","export const items = [\n  {\n    id: 0,\n    type: \"Сказочное заморское яство\",\n    title: \"Нямушка\",\n    filling: \"с фуа-гра\",\n    servingsCount: 10,\n    miceCount: 1,\n    additions: [],\n    weight: 0.5,\n    description: \"Печень утки разварная с артишоками.\",\n    status: \"default\"\n  },\n  {\n    id: 1,\n    type: \"Сказочное заморское яство\",\n    title: \"Нямушка\",\n    filling: \"с рыбой\",\n    servingsCount: 40,\n    miceCount: 2,\n    additions: [],\n    weight: 2,\n    description: \"Головы щучьи с чесноком да свежайшая сёмгушка.\",\n    status: \"selected\"\n  },\n  {\n    id: 2,\n    type: \"Сказочное заморское яство\",\n    title: \"Нямушка\",\n    filling: \"с курой\",\n    servingsCount: 100,\n    miceCount: 5,\n    additions: [\"заказчик доволен\"],\n    weight: 5,\n    description: \"Филе из цыплят с трюфелями в бульоне.\",\n    status: \"disabled\"\n  }\n];\n","import React from \"react\";\nimport \"./CardItem.scss\";\nimport { withNaming } from \"@bem-react/classname\";\nimport { getMiceCountText, getServingsCountText } from \"../../helpers/index\";\nimport cat1x from \"./../../assets/images/picture@1x.png\";\nimport cat2x from \"./../../assets/images/picture@2x.png\";\n\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"--\", v: \"_\" });\nconst b = cn(\"card-item\");\n\nexport const getDescription = (status, filling, description) => {\n  switch (status) {\n    case \"disabled\":\n      return `Печалька, ${filling} закончился`;\n    case \"selected\":\n      return description;\n    case \"default\":\n      return (\n        <span>\n          Чего сидишь? Порадуй котэ,{\" \"}\n          <span className={b(\"link\")}>\n            <a href=\"#\">купи</a>.\n          </span>\n        </span>\n      );\n  }\n};\n\nclass CardItem extends React.Component {\n  state = {\n    mouseEnter: false,\n    mouseLeaveAfterSelect: this.props.status === \"selected\"\n  };\n\n  handleMouseLeave = () => {\n    const { status } = this.props;\n    this.setState({\n      mouseEnter: false,\n      mouseLeaveAfterSelect: status === \"selected\"\n    });\n  };\n\n  handleMouseEnter = () => this.setState({ mouseEnter: true });\n\n  render() {\n    const {\n      type,\n      title,\n      filling,\n      servingsCount,\n      miceCount,\n      additions,\n      weight,\n      description,\n      status,\n      onSelect,\n      className\n    } = this.props;\n\n    const { mouseEnter, mouseLeaveAfterSelect } = this.state;\n\n    return (\n      <div className={`${b({ [status]: true })} ${className}`}>\n        <div\n          onClick={onSelect}\n          onMouseEnter={this.handleMouseEnter}\n          onMouseLeave={this.handleMouseLeave}\n          className={b(\"container\")}\n        >\n          <div className={b(\"top-wrapper\")}>\n            <p className={b(\"type\")}>\n              {status === \"selected\" && mouseEnter && mouseLeaveAfterSelect\n                ? \"Котэ не одобряет?\"\n                : type}\n            </p>\n            <h2 className={b(\"title-wrapper\")}>\n              <span className={b(\"title-top\")}>{title}</span>{\" \"}\n              <span className={b(\"title-bottom\")}>{filling}</span>\n            </h2>\n            <ul className={b(\"features-list\")}>\n              <li className={b(\"features-item\")}>\n                <b className={b(\"features-amount\")}>{servingsCount}</b>\n                {` ${getServingsCountText(servingsCount)}`}\n              </li>\n              <li className={b(\"features-item\")}>\n                <b className={b(\"features-amount\")}>\n                  {miceCount > 1 ? `${miceCount} ` : ``}\n                </b>\n                {`${getMiceCountText(miceCount)} в подарок`}\n              </li>\n              {additions.map(item => {\n                return <li>{item}</li>;\n              })}\n            </ul>\n          </div>\n          <div className={b(\"image-wrapper\")}>\n            <img\n              src={cat1x}\n              width=\"314\"\n              height=\"272\"\n              srcSet={`${cat2x} 2x`}\n              alt=\"Изображение продукта.\"\n            />\n          </div>\n          <p className={b(\"weight-wrapper\")}>\n            <span className={b(\"weight-amount\")}>\n              {weight.toLocaleString()}\n            </span>{\" \"}\n            кг\n          </p>\n        </div>\n        <p className={b(\"description\")}>\n          {getDescription(status, filling, description)}\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default CardItem;\n","export const getMiceCountText = miceCount => {\n  if (miceCount === 1) {\n    return \"мышь\";\n  }\n\n  if (miceCount % 100 >= 11 && miceCount % 100 <= 14) {\n    return \"мышей\";\n  }\n\n  switch (miceCount % 10) {\n    case 1:\n      return \"мышь\";\n    case 2:\n    case 3:\n    case 4:\n      return \"мыши\";\n    default:\n      return \"мышей\";\n  }\n};\n\nexport const getServingsCountText = servingsCount => {\n  if (servingsCount % 100 >= 11 && servingsCount % 100 <= 14) {\n    return \"порций\";\n  }\n\n  switch (servingsCount % 10) {\n    case 1:\n      return \"порция\";\n    case 2:\n    case 3:\n    case 4:\n      return \"порции\";\n    default:\n      return \"порций\";\n  }\n};\n","import React from \"react\";\nimport { withNaming } from \"@bem-react/classname\";\nimport \"./App.scss\";\nimport { items } from \"./mocks/items\";\nimport CardItem from \"./components/CardItem/CardItem\";\n\nconst cn = withNaming({ n: \"\", e: \"__\", m: \"--\", v: \"_\" });\nconst b = cn(\"App\");\n\nclass App extends React.Component {\n  state = {\n    items\n  };\n\n  toggleItemSelect = id => {\n    this.setState({\n      items: this.state.items.map(item => {\n        if (item[\"id\"] === id && item[\"status\"] !== \"disabled\") {\n          return {\n            ...item,\n            status: item[\"status\"] === \"default\" ? \"selected\" : \"default\"\n          };\n        }\n        return item;\n      })\n    });\n  };\n\n  render() {\n    const { items } = this.state;\n\n    return (\n      <div className={b()}>\n        <h1 className={b(\"title\")}>Ты сегодня покормил кота?</h1>\n        <div className={b(\"card-list\")}>\n          {items.map((item, index) => (\n            <CardItem\n              {...item}\n              key={index}\n              onSelect={() => this.toggleItemSelect(item[\"id\"])}\n              className={b(\"card-item\")}\n            />\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}